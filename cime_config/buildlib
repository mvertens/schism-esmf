#!/usr/bin/env python3

"""
build schism library
"""
import sys, os, shutil

_CIMEROOT = os.environ.get("CIMEROOT")
if _CIMEROOT is None:
    raise SystemExit("ERROR: must set CIMEROOT environment variable")

_LIBDIR = os.path.join(_CIMEROOT, "scripts", "Tools")
sys.path.append(_LIBDIR)

from standard_script_setup import *
from CIME.buildlib import parse_input
from CIME.case import Case
from CIME.utils import run_sub_or_cmd, run_cmd, expect
from CIME.build import get_standard_makefile_args

logger = logging.getLogger(__name__)

###############################################################################
def buildlib(caseroot, libroot, bldroot):
###############################################################################

    with Case(caseroot) as case:
        casetools = case.get_value("CASETOOLS")
        gmake_j = case.get_value("GMAKE_J")
        gmake = case.get_value("GMAKE")

        # FILL THIS IN

        # build the library
        makefile = os.path.join(casetools, "Makefile")
        complib = os.path.join(libroot,"libocn.a")
        cmd = "{} complib -j {} COMP_NAME=schism COMPLIB={} -f {} USER_INCLDIR={} {}"\
                .format(gmake, gmake_j, complib, makefile, user_incldir, get_standard_makefile_args(case))

        rc, out, err = run_cmd(cmd)
        logger.info("%s: \n\n output:\n %s \n\n err:\n\n%s\n"%(cmd,out,err))
        expect(rc == 0, "Command %s failed with rc=%s" % (cmd, rc))


def _main_func():
    caseroot, libroot, bldroot = parse_input(sys.argv)
    buildlib(caseroot, libroot, bldroot)

###############################################################################

if __name__ == "__main__":
    _main_func()
